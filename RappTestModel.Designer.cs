//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
namespace RAPPTest
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class RappTestEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new RappTestEntities object using the connection string found in the 'RappTestEntities' section of the application configuration file.
        /// </summary>
        public RappTestEntities() : base("name=RappTestEntities", "RappTestEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new RappTestEntities object.
        /// </summary>
        public RappTestEntities(string connectionString) : base(connectionString, "RappTestEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new RappTestEntities object.
        /// </summary>
        public RappTestEntities(EntityConnection connection) : base(connection, "RappTestEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Medium> Media
        {
            get
            {
                if ((_Media == null))
                {
                    _Media = base.CreateObjectSet<Medium>("Media");
                }
                return _Media;
            }
        }
        private ObjectSet<Medium> _Media;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MediaFolder> MediaFolders
        {
            get
            {
                if ((_MediaFolders == null))
                {
                    _MediaFolders = base.CreateObjectSet<MediaFolder>("MediaFolders");
                }
                return _MediaFolders;
            }
        }
        private ObjectSet<MediaFolder> _MediaFolders;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Media EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMedia(Medium medium)
        {
            base.AddObject("Media", medium);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MediaFolders EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMediaFolders(MediaFolder mediaFolder)
        {
            base.AddObject("MediaFolders", mediaFolder);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RappTestModel", Name="MediaFolder")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MediaFolder : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MediaFolder object.
        /// </summary>
        /// <param name="mediaFolderId">Initial value of the MediaFolderId property.</param>
        public static MediaFolder CreateMediaFolder(global::System.Guid mediaFolderId)
        {
            MediaFolder mediaFolder = new MediaFolder();
            mediaFolder.MediaFolderId = mediaFolderId;
            return mediaFolder;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid MediaFolderId
        {
            get
            {
                return _MediaFolderId;
            }
            set
            {
                if (_MediaFolderId != value)
                {
                    OnMediaFolderIdChanging(value);
                    ReportPropertyChanging("MediaFolderId");
                    _MediaFolderId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MediaFolderId");
                    OnMediaFolderIdChanged();
                }
            }
        }
        private global::System.Guid _MediaFolderId;
        partial void OnMediaFolderIdChanging(global::System.Guid value);
        partial void OnMediaFolderIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FolderNum
        {
            get
            {
                return _FolderNum;
            }
            set
            {
                OnFolderNumChanging(value);
                ReportPropertyChanging("FolderNum");
                _FolderNum = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FolderNum");
                OnFolderNumChanged();
            }
        }
        private Nullable<global::System.Int32> _FolderNum;
        partial void OnFolderNumChanging(Nullable<global::System.Int32> value);
        partial void OnFolderNumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FolderName
        {
            get
            {
                return _FolderName;
            }
            set
            {
                OnFolderNameChanging(value);
                ReportPropertyChanging("FolderName");
                _FolderName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FolderName");
                OnFolderNameChanged();
            }
        }
        private global::System.String _FolderName;
        partial void OnFolderNameChanging(global::System.String value);
        partial void OnFolderNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RappTestModel", Name="Medium")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Medium : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Medium object.
        /// </summary>
        /// <param name="mediaId">Initial value of the MediaId property.</param>
        /// <param name="mediaFolderId">Initial value of the MediaFolderId property.</param>
        public static Medium CreateMedium(global::System.Guid mediaId, global::System.Guid mediaFolderId)
        {
            Medium medium = new Medium();
            medium.MediaId = mediaId;
            medium.MediaFolderId = mediaFolderId;
            return medium;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid MediaId
        {
            get
            {
                return _MediaId;
            }
            set
            {
                if (_MediaId != value)
                {
                    OnMediaIdChanging(value);
                    ReportPropertyChanging("MediaId");
                    _MediaId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MediaId");
                    OnMediaIdChanged();
                }
            }
        }
        private global::System.Guid _MediaId;
        partial void OnMediaIdChanging(global::System.Guid value);
        partial void OnMediaIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid MediaFolderId
        {
            get
            {
                return _MediaFolderId;
            }
            set
            {
                OnMediaFolderIdChanging(value);
                ReportPropertyChanging("MediaFolderId");
                _MediaFolderId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MediaFolderId");
                OnMediaFolderIdChanged();
            }
        }
        private global::System.Guid _MediaFolderId;
        partial void OnMediaFolderIdChanging(global::System.Guid value);
        partial void OnMediaFolderIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FileName
        {
            get
            {
                return _FileName;
            }
            set
            {
                OnFileNameChanging(value);
                ReportPropertyChanging("FileName");
                _FileName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FileName");
                OnFileNameChanged();
            }
        }
        private global::System.String _FileName;
        partial void OnFileNameChanging(global::System.String value);
        partial void OnFileNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Sequence
        {
            get
            {
                return _Sequence;
            }
            set
            {
                OnSequenceChanging(value);
                ReportPropertyChanging("Sequence");
                _Sequence = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Sequence");
                OnSequenceChanged();
            }
        }
        private Nullable<global::System.Int32> _Sequence;
        partial void OnSequenceChanging(Nullable<global::System.Int32> value);
        partial void OnSequenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsScreenSaver
        {
            get
            {
                return _IsScreenSaver;
            }
            set
            {
                OnIsScreenSaverChanging(value);
                ReportPropertyChanging("IsScreenSaver");
                _IsScreenSaver = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsScreenSaver");
                OnIsScreenSaverChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsScreenSaver;
        partial void OnIsScreenSaverChanging(Nullable<global::System.Boolean> value);
        partial void OnIsScreenSaverChanged();

        #endregion

    
    }

    #endregion

    
}
